{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Semicolon\\\\Desktop\\\\VCheck2\\\\digital-vehicle-inspection-app\\\\src\\\\components\\\\Inspector\\\\ScanPlate.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ScanPlate.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanPlate = () => {\n  _s();\n  const [plateNumber, setPlateNumber] = useState('');\n  const [verificationResult, setVerificationResult] = useState(null);\n  const [scanMethod, setScanMethod] = useState('camera');\n  const [cameraActive, setCameraActive] = useState(false);\n  const [detectedPlate, setDetectedPlate] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Mock plate detection (replace with actual OCR/plate recognition)\n  const detectPlateFromStream = () => {\n    const mockPlates = ['ABC123', 'XYZ789', 'DEF456'];\n    const randomPlate = mockPlates[Math.floor(Math.random() * mockPlates.length)];\n    setDetectedPlate(randomPlate);\n    setPlateNumber(randomPlate);\n  };\n\n  // Initialize camera\n  useEffect(() => {\n    if (scanMethod === 'camera' && cameraActive) {\n      const startCamera = async () => {\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            video: {\n              facingMode: 'environment'\n            }\n          });\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n\n          // Simulate plate detection every 3 seconds\n          const detectionInterval = setInterval(detectPlateFromStream, 3000);\n          return () => {\n            clearInterval(detectionInterval);\n            stream.getTracks().forEach(track => track.stop());\n          };\n        } catch (err) {\n          console.error('Camera error:', err);\n          setVerificationResult('Camera access denied. Please use manual entry.');\n          setScanMethod('manual');\n        }\n      };\n      startCamera();\n    }\n  }, [scanMethod, cameraActive]);\n  const handleScan = () => {\n    if (plateNumber) {\n      // Simulate API verification\n      setTimeout(() => {\n        setVerificationResult(`Vehicle ${plateNumber} verified successfully.`);\n      }, 1000);\n    } else {\n      setVerificationResult('Please enter or scan a valid plate number.');\n    }\n  };\n  const toggleCamera = () => {\n    setCameraActive(!cameraActive);\n    if (!cameraActive) {\n      setPlateNumber('');\n      setDetectedPlate(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scan-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"scan-header\",\n      children: \"Vehicle Plate Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-method-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `method-btn ${scanMethod === 'camera' ? 'active' : ''}`,\n        onClick: () => setScanMethod('camera'),\n        children: \"Camera Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `method-btn ${scanMethod === 'manual' ? 'active' : ''}`,\n        onClick: () => setScanMethod('manual'),\n        children: \"Manual Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), scanMethod === 'camera' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `camera-feed ${cameraActive ? 'active' : 'inactive'}`,\n        children: cameraActive ? /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          className: \"video-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"camera-icon\",\n            children: \"\\uD83D\\uDCF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Camera is off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `camera-toggle ${cameraActive ? 'active' : ''}`,\n        onClick: toggleCamera,\n        children: cameraActive ? 'Stop Camera' : 'Start Camera'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), detectedPlate && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detection-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Detected Plate: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: detectedPlate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"confirm-btn\",\n          onClick: () => setPlateNumber(detectedPlate),\n          children: \"Use This Plate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manual-entry\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: plateNumber,\n        onChange: e => setPlateNumber(e.target.value),\n        placeholder: \"Enter plate number (e.g. ABC123)\",\n        className: \"plate-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScan,\n        className: \"scan-button\",\n        disabled: !plateNumber,\n        children: \"Verify Plate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), verificationResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result-message ${verificationResult.includes('success') ? 'success' : 'error'}`,\n      children: verificationResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(ScanPlate, \"V6poF+1S/666VY9LnnG4py7/OOg=\");\n_c = ScanPlate;\nexport default ScanPlate;\nvar _c;\n$RefreshReg$(_c, \"ScanPlate\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ScanPlate","_s","plateNumber","setPlateNumber","verificationResult","setVerificationResult","scanMethod","setScanMethod","cameraActive","setCameraActive","detectedPlate","setDetectedPlate","videoRef","canvasRef","detectPlateFromStream","mockPlates","randomPlate","Math","floor","random","length","startCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","current","srcObject","detectionInterval","setInterval","clearInterval","getTracks","forEach","track","stop","err","console","error","handleScan","setTimeout","toggleCamera","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","playsInline","muted","type","value","onChange","e","target","placeholder","disabled","includes","style","display","_c","$RefreshReg$"],"sources":["C:/Users/Semicolon/Desktop/VCheck2/digital-vehicle-inspection-app/src/components/Inspector/ScanPlate.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './ScanPlate.css';\n\nconst ScanPlate: React.FC = () => {\n    const [plateNumber, setPlateNumber] = useState('');\n    const [verificationResult, setVerificationResult] = useState<string | null>(null);\n    const [scanMethod, setScanMethod] = useState<'camera' | 'manual'>('camera');\n    const [cameraActive, setCameraActive] = useState(false);\n    const [detectedPlate, setDetectedPlate] = useState<string | null>(null);\n    const videoRef = useRef<HTMLVideoElement>(null);\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    // Mock plate detection (replace with actual OCR/plate recognition)\n    const detectPlateFromStream = () => {\n        const mockPlates = ['ABC123', 'XYZ789', 'DEF456'];\n        const randomPlate = mockPlates[Math.floor(Math.random() * mockPlates.length)];\n        setDetectedPlate(randomPlate);\n        setPlateNumber(randomPlate);\n    };\n\n    // Initialize camera\n    useEffect(() => {\n        if (scanMethod === 'camera' && cameraActive) {\n            const startCamera = async () => {\n                try {\n                    const stream = await navigator.mediaDevices.getUserMedia({ \n                        video: { facingMode: 'environment' } \n                    });\n                    if (videoRef.current) {\n                        videoRef.current.srcObject = stream;\n                    }\n                    \n                    // Simulate plate detection every 3 seconds\n                    const detectionInterval = setInterval(detectPlateFromStream, 3000);\n                    \n                    return () => {\n                        clearInterval(detectionInterval);\n                        stream.getTracks().forEach(track => track.stop());\n                    };\n                } catch (err) {\n                    console.error('Camera error:', err);\n                    setVerificationResult('Camera access denied. Please use manual entry.');\n                    setScanMethod('manual');\n                }\n            };\n            \n            startCamera();\n        }\n    }, [scanMethod, cameraActive]);\n\n    const handleScan = () => {\n        if (plateNumber) {\n            // Simulate API verification\n            setTimeout(() => {\n                setVerificationResult(`Vehicle ${plateNumber} verified successfully.`);\n            }, 1000);\n        } else {\n            setVerificationResult('Please enter or scan a valid plate number.');\n        }\n    };\n\n    const toggleCamera = () => {\n        setCameraActive(!cameraActive);\n        if (!cameraActive) {\n            setPlateNumber('');\n            setDetectedPlate(null);\n        }\n    };\n\n    return (\n        <div className=\"scan-container\">\n            <h2 className=\"scan-header\">Vehicle Plate Scanner</h2>\n            \n            <div className=\"scan-method-toggle\">\n                <button\n                    className={`method-btn ${scanMethod === 'camera' ? 'active' : ''}`}\n                    onClick={() => setScanMethod('camera')}\n                >\n                    Camera Scan\n                </button>\n                <button\n                    className={`method-btn ${scanMethod === 'manual' ? 'active' : ''}`}\n                    onClick={() => setScanMethod('manual')}\n                >\n                    Manual Entry\n                </button>\n            </div>\n\n            {scanMethod === 'camera' ? (\n                <div className=\"camera-section\">\n                    <div className={`camera-feed ${cameraActive ? 'active' : 'inactive'}`}>\n                        {cameraActive ? (\n                            <video \n                                ref={videoRef} \n                                autoPlay \n                                playsInline \n                                muted\n                                className=\"video-preview\"\n                            />\n                        ) : (\n                            <div className=\"camera-placeholder\">\n                                <span className=\"camera-icon\">📷</span>\n                                <p>Camera is off</p>\n                            </div>\n                        )}\n                    </div>\n                    <button \n                        className={`camera-toggle ${cameraActive ? 'active' : ''}`}\n                        onClick={toggleCamera}\n                    >\n                        {cameraActive ? 'Stop Camera' : 'Start Camera'}\n                    </button>\n                    \n                    {detectedPlate && (\n                        <div className=\"detection-result\">\n                            <p>Detected Plate: <strong>{detectedPlate}</strong></p>\n                            <button \n                                className=\"confirm-btn\"\n                                onClick={() => setPlateNumber(detectedPlate)}\n                            >\n                                Use This Plate\n                            </button>\n                        </div>\n                    )}\n                </div>\n            ) : (\n                <div className=\"manual-entry\">\n                    <input\n                        type=\"text\"\n                        value={plateNumber}\n                        onChange={(e) => setPlateNumber(e.target.value)}\n                        placeholder=\"Enter plate number (e.g. ABC123)\"\n                        className=\"plate-input\"\n                    />\n                </div>\n            )}\n\n            <div className=\"action-section\">\n                <button \n                    onClick={handleScan}\n                    className=\"scan-button\"\n                    disabled={!plateNumber}\n                >\n                    Verify Plate\n                </button>\n            </div>\n\n            {verificationResult && (\n                <div className={`result-message ${verificationResult.includes('success') ? 'success' : 'error'}`}>\n                    {verificationResult}\n                </div>\n            )}\n\n            <canvas ref={canvasRef} style={{ display: 'none' }} />\n        </div>\n    );\n};\n\nexport default ScanPlate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}