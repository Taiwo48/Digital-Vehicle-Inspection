{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Semicolon\\\\Desktop\\\\VCheck2\\\\digital-vehicle-inspection-app\\\\src\\\\components\\\\Owner\\\\ViewReports.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getInspectionReports } from '../../api'; // Assuming this function exists in your API file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Assuming this type exists in your types file\n\nconst ViewReports = () => {\n  _s();\n  const [reports, setReports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchReports = async () => {\n      try {\n        const fetchedReports = await getInspectionReports(); // Fetch reports from API\n        setReports(fetchedReports);\n      } catch (err) {\n        setError('Failed to fetch reports');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReports();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Inspection Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), reports.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reports available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reports.map(report => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: report.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: report.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: report.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, report.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewReports, \"qddVUGgFG3/iE729YalsFBpWYyE=\");\n_c = ViewReports;\nexport default ViewReports;\nvar _c;\n$RefreshReg$(_c, \"ViewReports\");","map":{"version":3,"names":["React","useEffect","useState","getInspectionReports","jsxDEV","_jsxDEV","ViewReports","_s","reports","setReports","loading","setLoading","error","setError","fetchReports","fetchedReports","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","report","title","date","details","id","_c","$RefreshReg$"],"sources":["C:/Users/Semicolon/Desktop/VCheck2/digital-vehicle-inspection-app/src/components/Owner/ViewReports.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getInspectionReports } from '../../api'; // Assuming this function exists in your API file\nimport { InspectionReport } from '../../types'; // Assuming this type exists in your types file\n\nconst ViewReports: React.FC = () => {\n    const [reports, setReports] = useState<InspectionReport[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchReports = async () => {\n            try {\n                const fetchedReports = await getInspectionReports(); // Fetch reports from API\n                setReports(fetchedReports);\n            } catch (err) {\n                setError('Failed to fetch reports');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchReports();\n    }, []);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>{error}</div>;\n    }\n\n    return (\n        <div>\n            <h2>Your Inspection Reports</h2>\n            {reports.length === 0 ? (\n                <p>No reports available.</p>\n            ) : (\n                <ul>\n                    {reports.map(report => (\n                        <li key={report.id}>\n                            <h3>{report.title}</h3>\n                            <p>{report.date}</p>\n                            <p>{report.details}</p>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default ViewReports;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,oBAAoB,QAAQ,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACF;;AAEhD,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAqB,EAAE,CAAC;EAC9D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,cAAc,GAAG,MAAMZ,oBAAoB,CAAC,CAAC,CAAC,CAAC;QACrDM,UAAU,CAACM,cAAc,CAAC;MAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVH,QAAQ,CAAC,yBAAyB,CAAC;MACvC,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAY,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAIT,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAAY,QAAA,EAAML;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7B;EAEA,oBACIhB,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/Bb,OAAO,CAACc,MAAM,KAAK,CAAC,gBACjBjB,OAAA;MAAAY,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE5BhB,OAAA;MAAAY,QAAA,EACKT,OAAO,CAACe,GAAG,CAACC,MAAM,iBACfnB,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UAAAY,QAAA,EAAKO,MAAM,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBhB,OAAA;UAAAY,QAAA,EAAIO,MAAM,CAACE;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBhB,OAAA;UAAAY,QAAA,EAAIO,MAAM,CAACG;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHlBG,MAAM,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACd,EAAA,CA9CID,WAAqB;AAAAuB,EAAA,GAArBvB,WAAqB;AAgD3B,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}