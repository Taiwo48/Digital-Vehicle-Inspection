{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Semicolon\\\\Desktop\\\\VCheck2\\\\digital-vehicle-inspection-app\\\\src\\\\components\\\\Inspector\\\\ScanPlate.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanPlate = () => {\n  _s();\n  const [plateNumber, setPlateNumber] = useState('');\n  const [verificationResult, setVerificationResult] = useState(null);\n  const handleScan = () => {\n    // Logic to verify the plate number goes here\n    // This is a placeholder for the actual API call\n    if (plateNumber) {\n      // Simulate an API call\n      setVerificationResult(`Plate number ${plateNumber} verified successfully.`);\n    } else {\n      setVerificationResult('Please enter a valid plate number.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Scan Vehicle Plate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: plateNumber,\n      onChange: e => setPlateNumber(e.target.value),\n      placeholder: \"Enter Plate Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleScan,\n      children: \"Verify Plate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), verificationResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: verificationResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(ScanPlate, \"N8VwdqFwgy4qsFCrt00QVg20mPU=\");\n_c = ScanPlate;\nexport default ScanPlate;\nvar _c;\n$RefreshReg$(_c, \"ScanPlate\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ScanPlate","_s","plateNumber","setPlateNumber","verificationResult","setVerificationResult","handleScan","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Semicolon/Desktop/VCheck2/digital-vehicle-inspection-app/src/components/Inspector/ScanPlate.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ScanPlate: React.FC = () => {\n    const [plateNumber, setPlateNumber] = useState('');\n    const [verificationResult, setVerificationResult] = useState<string | null>(null);\n\n    const handleScan = () => {\n        // Logic to verify the plate number goes here\n        // This is a placeholder for the actual API call\n        if (plateNumber) {\n            // Simulate an API call\n            setVerificationResult(`Plate number ${plateNumber} verified successfully.`);\n        } else {\n            setVerificationResult('Please enter a valid plate number.');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Scan Vehicle Plate</h2>\n            <input\n                type=\"text\"\n                value={plateNumber}\n                onChange={(e) => setPlateNumber(e.target.value)}\n                placeholder=\"Enter Plate Number\"\n            />\n            <button onClick={handleScan}>Verify Plate</button>\n            {verificationResult && <p>{verificationResult}</p>}\n        </div>\n    );\n};\n\nexport default ScanPlate;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EAEjF,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrB;IACA;IACA,IAAIJ,WAAW,EAAE;MACb;MACAG,qBAAqB,CAAC,gBAAgBH,WAAW,yBAAyB,CAAC;IAC/E,CAAC,MAAM;MACHG,qBAAqB,CAAC,oCAAoC,CAAC;IAC/D;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAQ,QAAA,gBACIR,OAAA;MAAAQ,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BZ,OAAA;MACIa,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEX,WAAY;MACnBY,QAAQ,EAAGC,CAAC,IAAKZ,cAAc,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,WAAW,EAAC;IAAoB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFZ,OAAA;MAAQmB,OAAO,EAAEZ,UAAW;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDP,kBAAkB,iBAAIL,OAAA;MAAAQ,QAAA,EAAIH;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd,CAAC;AAACV,EAAA,CA5BID,SAAmB;AAAAmB,EAAA,GAAnBnB,SAAmB;AA8BzB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}