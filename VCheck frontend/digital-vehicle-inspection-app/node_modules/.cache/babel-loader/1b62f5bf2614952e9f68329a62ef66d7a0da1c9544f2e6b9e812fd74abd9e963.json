{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'https://api.yourservice.com'; // Replace with your actual API base URL\n\n// Types (you can expand these as needed)\n\n// Authentication\nexport const login = async credentials => {\n  const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n  return response.data;\n};\nexport const register = async userData => {\n  const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\n  return response.data;\n};\n\n// Vehicle Verification\nexport const verifyVehicle = async plateNumber => {\n  const response = await axios.get(`${API_BASE_URL}/vehicles/verify/${plateNumber}`);\n  return response.data;\n};\n\n// Inspection Reports\nexport const uploadReport = async reportData => {\n  const response = await axios.post(`${API_BASE_URL}/reports/upload`, reportData);\n  return response.data;\n};\nexport const getInspectionHistory = async inspectorId => {\n  const response = await axios.get(`${API_BASE_URL}/inspections/history/${inspectorId}`);\n  return response.data;\n};\n\n// Vehicle Owner Functions\nexport const getVehicleDetails = async vehicleId => {\n  const response = await axios.get(`${API_BASE_URL}/vehicles/${vehicleId}`);\n  return response.data;\n};\nexport const bookAppointment = async appointmentData => {\n  const response = await axios.post(`${API_BASE_URL}/appointments/book`, appointmentData);\n  return response.data;\n};\nexport const getReports = async ownerId => {\n  const response = await axios.get(`${API_BASE_URL}/reports/${ownerId}`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","login","credentials","response","post","data","register","userData","verifyVehicle","plateNumber","get","uploadReport","reportData","getInspectionHistory","inspectorId","getVehicleDetails","vehicleId","bookAppointment","appointmentData","getReports","ownerId"],"sources":["C:/Users/Semicolon/Desktop/VCheck2/digital-vehicle-inspection-app/src/api/index.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'https://api.yourservice.com'; // Replace with your actual API base URL\n\n// Types (you can expand these as needed)\ninterface Credentials {\n    email: string;\n    password: string;\n}\n\ninterface UserData {\n    name: string;\n    email: string;\n    password: string;\n    // add other fields as needed\n}\n\ninterface ReportData {\n    // define report fields\n}\n\ninterface AppointmentData {\n    // define appointment fields\n}\n\n// Authentication\nexport const login = async (credentials: Credentials) => {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n    return response.data;\n};\n\nexport const register = async (userData: UserData) => {\n    const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\n    return response.data;\n};\n\n// Vehicle Verification\nexport const verifyVehicle = async (plateNumber: string) => {\n    const response = await axios.get(`${API_BASE_URL}/vehicles/verify/${plateNumber}`);\n    return response.data;\n};\n\n// Inspection Reports\nexport const uploadReport = async (reportData: ReportData) => {\n    const response = await axios.post(`${API_BASE_URL}/reports/upload`, reportData);\n    return response.data;\n};\n\nexport const getInspectionHistory = async (inspectorId: string) => {\n    const response = await axios.get(`${API_BASE_URL}/inspections/history/${inspectorId}`);\n    return response.data;\n};\n\n// Vehicle Owner Functions\nexport const getVehicleDetails = async (vehicleId: string) => {\n    const response = await axios.get(`${API_BASE_URL}/vehicles/${vehicleId}`);\n    return response.data;\n};\n\nexport const bookAppointment = async (appointmentData: AppointmentData) => {\n    const response = await axios.post(`${API_BASE_URL}/appointments/book`, appointmentData);\n    return response.data;\n};\n\nexport const getReports = async (ownerId: string) => {\n    const response = await axios.get(`${API_BASE_URL}/reports/${ownerId}`);\n    return response.data;\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,6BAA6B,CAAC,CAAC;;AAEpD;;AAqBA;AACA,OAAO,MAAMC,KAAK,GAAG,MAAOC,WAAwB,IAAK;EACrD,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,aAAa,EAAEE,WAAW,CAAC;EAC5E,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAkB,IAAK;EAClD,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,gBAAgB,EAAEO,QAAQ,CAAC;EAC5E,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAG,MAAOC,WAAmB,IAAK;EACxD,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACW,GAAG,CAAC,GAAGV,YAAY,oBAAoBS,WAAW,EAAE,CAAC;EAClF,OAAON,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMM,YAAY,GAAG,MAAOC,UAAsB,IAAK;EAC1D,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,iBAAiB,EAAEY,UAAU,CAAC;EAC/E,OAAOT,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMQ,oBAAoB,GAAG,MAAOC,WAAmB,IAAK;EAC/D,MAAMX,QAAQ,GAAG,MAAMJ,KAAK,CAACW,GAAG,CAAC,GAAGV,YAAY,wBAAwBc,WAAW,EAAE,CAAC;EACtF,OAAOX,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMU,iBAAiB,GAAG,MAAOC,SAAiB,IAAK;EAC1D,MAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAACW,GAAG,CAAC,GAAGV,YAAY,aAAagB,SAAS,EAAE,CAAC;EACzE,OAAOb,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMY,eAAe,GAAG,MAAOC,eAAgC,IAAK;EACvE,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,oBAAoB,EAAEkB,eAAe,CAAC;EACvF,OAAOf,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMc,UAAU,GAAG,MAAOC,OAAe,IAAK;EACjD,MAAMjB,QAAQ,GAAG,MAAMJ,KAAK,CAACW,GAAG,CAAC,GAAGV,YAAY,YAAYoB,OAAO,EAAE,CAAC;EACtE,OAAOjB,QAAQ,CAACE,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}