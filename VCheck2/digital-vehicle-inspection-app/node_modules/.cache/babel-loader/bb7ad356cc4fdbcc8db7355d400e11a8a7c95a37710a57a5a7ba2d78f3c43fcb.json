{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Semicolon\\\\Desktop\\\\VCheck2\\\\digital-vehicle-inspection-app\\\\src\\\\components\\\\Inspector\\\\ScanPlate.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ScanPlate.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScanPlate = () => {\n  _s();\n  const [plateNumber, setPlateNumber] = useState('');\n  const [verificationResult, setVerificationResult] = useState(null);\n  const [scanMethod, setScanMethod] = useState('manual'); // Default to manual\n  const [cameraActive, setCameraActive] = useState(false);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Clean up camera on unmount or mode change\n  useEffect(() => {\n    return () => {\n      var _videoRef$current;\n      if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n        const stream = videoRef.current.srcObject;\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Camera initialization\n  useEffect(() => {\n    if (scanMethod === 'camera' && cameraActive) {\n      const startCamera = async () => {\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            video: {\n              facingMode: 'environment'\n            }\n          });\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        } catch (err) {\n          console.error('Camera error:', err);\n          setVerificationResult('Camera access denied. Using manual entry.');\n          setScanMethod('manual');\n          setCameraActive(false);\n        }\n      };\n      startCamera();\n    }\n  }, [scanMethod, cameraActive]);\n  const handleManualInput = e => {\n    setPlateNumber(e.target.value.toUpperCase());\n    setVerificationResult(null);\n  };\n  const handleScan = () => {\n    if (!plateNumber.trim()) {\n      setVerificationResult('Please enter a valid plate number.');\n      return;\n    }\n\n    // Simulate API verification\n    setTimeout(() => {\n      setVerificationResult(`Vehicle ${plateNumber} verified successfully.`);\n\n      // In a real app, you would likely:\n      // 1. Send to your backend\n      // 2. Add to inspection history\n      // 3. Navigate or show next steps\n    }, 1000);\n  };\n  const toggleCamera = () => {\n    const newState = !cameraActive;\n    setCameraActive(newState);\n\n    // Clear plate when switching camera modes\n    if (!newState) {\n      setPlateNumber('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scan-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"scan-header\",\n      children: \"Vehicle Plate Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-method-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `method-btn ${scanMethod === 'camera' ? 'active' : ''}`,\n        onClick: () => {\n          setScanMethod('camera');\n          setPlateNumber(''); // Clear when switching modes\n        },\n        children: \"Camera Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `method-btn ${scanMethod === 'manual' ? 'active' : ''}`,\n        onClick: () => {\n          setScanMethod('manual');\n          setCameraActive(false); // Ensure camera is off\n          setPlateNumber(''); // Clear when switching modes\n        },\n        children: \"Manual Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), scanMethod === 'camera' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `camera-feed ${cameraActive ? 'active' : 'inactive'}`,\n        children: cameraActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            muted: true,\n            className: \"video-preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"capture-btn\",\n            onClick: () => {\n              // In a real app, this would capture and process the image\n              alert('Plate capture functionality would go here');\n            },\n            children: \"Capture Plate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"camera-icon\",\n            children: \"\\uD83D\\uDCF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Camera is off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `camera-toggle ${cameraActive ? 'active' : ''}`,\n        onClick: toggleCamera,\n        children: cameraActive ? 'Stop Camera' : 'Start Camera'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manual-entry\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: plateNumber,\n        onChange: handleManualInput,\n        placeholder: \"Enter plate number (e.g. ABC123)\",\n        className: \"plate-input\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScan,\n        className: \"scan-button\",\n        disabled: !plateNumber.trim(),\n        children: scanMethod === 'camera' ? 'Verify Plate' : 'Submit Plate'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), verificationResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result-message ${verificationResult.includes('success') ? 'success' : 'error'}`,\n      children: verificationResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(ScanPlate, \"+Q5q/lpkVc6Y7ep1NPKRquUaFC0=\");\n_c = ScanPlate;\nexport default ScanPlate;\nvar _c;\n$RefreshReg$(_c, \"ScanPlate\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ScanPlate","_s","plateNumber","setPlateNumber","verificationResult","setVerificationResult","scanMethod","setScanMethod","cameraActive","setCameraActive","videoRef","canvasRef","_videoRef$current","current","srcObject","stream","getTracks","forEach","track","stop","startCamera","navigator","mediaDevices","getUserMedia","video","facingMode","err","console","error","handleManualInput","e","target","value","toUpperCase","handleScan","trim","setTimeout","toggleCamera","newState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","playsInline","muted","alert","type","onChange","placeholder","autoFocus","disabled","includes","style","display","_c","$RefreshReg$"],"sources":["C:/Users/Semicolon/Desktop/VCheck2/digital-vehicle-inspection-app/src/components/Inspector/ScanPlate.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './ScanPlate.css';\n\nconst ScanPlate: React.FC = () => {\n    const [plateNumber, setPlateNumber] = useState('');\n    const [verificationResult, setVerificationResult] = useState<string | null>(null);\n    const [scanMethod, setScanMethod] = useState<'camera' | 'manual'>('manual'); // Default to manual\n    const [cameraActive, setCameraActive] = useState(false);\n    const videoRef = useRef<HTMLVideoElement>(null);\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    // Clean up camera on unmount or mode change\n    useEffect(() => {\n        return () => {\n            if (videoRef.current?.srcObject) {\n                const stream = videoRef.current.srcObject as MediaStream;\n                stream.getTracks().forEach(track => track.stop());\n            }\n        };\n    }, []);\n\n    // Camera initialization\n    useEffect(() => {\n        if (scanMethod === 'camera' && cameraActive) {\n            const startCamera = async () => {\n                try {\n                    const stream = await navigator.mediaDevices.getUserMedia({ \n                        video: { facingMode: 'environment' } \n                    });\n                    if (videoRef.current) {\n                        videoRef.current.srcObject = stream;\n                    }\n                } catch (err) {\n                    console.error('Camera error:', err);\n                    setVerificationResult('Camera access denied. Using manual entry.');\n                    setScanMethod('manual');\n                    setCameraActive(false);\n                }\n            };\n            \n            startCamera();\n        }\n    }, [scanMethod, cameraActive]);\n\n    const handleManualInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setPlateNumber(e.target.value.toUpperCase());\n        setVerificationResult(null);\n    };\n\n    const handleScan = () => {\n        if (!plateNumber.trim()) {\n            setVerificationResult('Please enter a valid plate number.');\n            return;\n        }\n\n        // Simulate API verification\n        setTimeout(() => {\n            setVerificationResult(`Vehicle ${plateNumber} verified successfully.`);\n            \n            // In a real app, you would likely:\n            // 1. Send to your backend\n            // 2. Add to inspection history\n            // 3. Navigate or show next steps\n        }, 1000);\n    };\n\n    const toggleCamera = () => {\n        const newState = !cameraActive;\n        setCameraActive(newState);\n        \n        // Clear plate when switching camera modes\n        if (!newState) {\n            setPlateNumber('');\n        }\n    };\n\n    return (\n        <div className=\"scan-container\">\n            <h2 className=\"scan-header\">Vehicle Plate Scanner</h2>\n            \n            <div className=\"scan-method-toggle\">\n                <button\n                    className={`method-btn ${scanMethod === 'camera' ? 'active' : ''}`}\n                    onClick={() => {\n                        setScanMethod('camera');\n                        setPlateNumber(''); // Clear when switching modes\n                    }}\n                >\n                    Camera Scan\n                </button>\n                <button\n                    className={`method-btn ${scanMethod === 'manual' ? 'active' : ''}`}\n                    onClick={() => {\n                        setScanMethod('manual');\n                        setCameraActive(false); // Ensure camera is off\n                        setPlateNumber(''); // Clear when switching modes\n                    }}\n                >\n                    Manual Entry\n                </button>\n            </div>\n\n            {scanMethod === 'camera' ? (\n                <div className=\"camera-section\">\n                    <div className={`camera-feed ${cameraActive ? 'active' : 'inactive'}`}>\n                        {cameraActive ? (\n                            <>\n                                <video \n                                    ref={videoRef} \n                                    autoPlay \n                                    playsInline \n                                    muted\n                                    className=\"video-preview\"\n                                />\n                                <button \n                                    className=\"capture-btn\"\n                                    onClick={() => {\n                                        // In a real app, this would capture and process the image\n                                        alert('Plate capture functionality would go here');\n                                    }}\n                                >\n                                    Capture Plate\n                                </button>\n                            </>\n                        ) : (\n                            <div className=\"camera-placeholder\">\n                                <span className=\"camera-icon\">📷</span>\n                                <p>Camera is off</p>\n                            </div>\n                        )}\n                    </div>\n                    <button \n                        className={`camera-toggle ${cameraActive ? 'active' : ''}`}\n                        onClick={toggleCamera}\n                    >\n                        {cameraActive ? 'Stop Camera' : 'Start Camera'}\n                    </button>\n                </div>\n            ) : (\n                <div className=\"manual-entry\">\n                    <input\n                        type=\"text\"\n                        value={plateNumber}\n                        onChange={handleManualInput}\n                        placeholder=\"Enter plate number (e.g. ABC123)\"\n                        className=\"plate-input\"\n                        autoFocus\n                    />\n                </div>\n            )}\n\n            <div className=\"action-section\">\n                <button \n                    onClick={handleScan}\n                    className=\"scan-button\"\n                    disabled={!plateNumber.trim()}\n                >\n                    {scanMethod === 'camera' ? 'Verify Plate' : 'Submit Plate'}\n                </button>\n            </div>\n\n            {verificationResult && (\n                <div className={`result-message ${verificationResult.includes('success') ? 'success' : 'error'}`}>\n                    {verificationResult}\n                </div>\n            )}\n\n            <canvas ref={canvasRef} style={{ display: 'none' }} />\n        </div>\n    );\n};\n\nexport default ScanPlate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}