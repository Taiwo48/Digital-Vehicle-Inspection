{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Semicolon\\\\Desktop\\\\VCheck2\\\\digital-vehicle-inspection-app\\\\src\\\\components\\\\Inspector\\\\InspectionHistory.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchInspectionHistory } from '../../api'; // Assuming this function is defined in your api/index.ts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InspectionHistory = () => {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadInspectionHistory = async () => {\n      try {\n        const data = await fetchInspectionHistory(); // Fetching inspection history\n        setHistory(data);\n      } catch (err) {\n        setError('Failed to load inspection history');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadInspectionHistory();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inspection History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: history.map(inspection => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", inspection.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Vehicle Plate: \", inspection.vehiclePlate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Inspector: \", inspection.inspectorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Report: \", inspection.report]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, inspection.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(InspectionHistory, \"CvlHmHwzSyuZZUdDlC8fNs/HKHo=\");\n_c = InspectionHistory;\nexport default InspectionHistory;\nvar _c;\n$RefreshReg$(_c, \"InspectionHistory\");","map":{"version":3,"names":["React","useEffect","useState","fetchInspectionHistory","jsxDEV","_jsxDEV","InspectionHistory","_s","history","setHistory","loading","setLoading","error","setError","loadInspectionHistory","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","map","inspection","date","vehiclePlate","inspectorName","report","id","_c","$RefreshReg$"],"sources":["C:/Users/Semicolon/Desktop/VCheck2/digital-vehicle-inspection-app/src/components/Inspector/InspectionHistory.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchInspectionHistory } from '../../api'; // Assuming this function is defined in your api/index.ts\n\nconst InspectionHistory: React.FC = () => {\n    const [history, setHistory] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const loadInspectionHistory = async () => {\n            try {\n                const data = await fetchInspectionHistory(); // Fetching inspection history\n                setHistory(data);\n            } catch (err) {\n                setError('Failed to load inspection history');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadInspectionHistory();\n    }, []);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>{error}</div>;\n    }\n\n    return (\n        <div>\n            <h2>Inspection History</h2>\n            <ul>\n                {history.map((inspection) => (\n                    <li key={inspection.id}>\n                        <p>Date: {inspection.date}</p>\n                        <p>Vehicle Plate: {inspection.vehiclePlate}</p>\n                        <p>Inspector: {inspection.inspectorName}</p>\n                        <p>Report: {inspection.report}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default InspectionHistory;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,sBAAsB,QAAQ,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,MAAMa,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMZ,sBAAsB,CAAC,CAAC,CAAC,CAAC;QAC7CM,UAAU,CAACM,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVH,QAAQ,CAAC,mCAAmC,CAAC;MACjD,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,qBAAqB,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAY,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAIT,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAAY,QAAA,EAAML;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7B;EAEA,oBACIhB,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BhB,OAAA;MAAAY,QAAA,EACKT,OAAO,CAACc,GAAG,CAAEC,UAAU,iBACpBlB,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UAAAY,QAAA,GAAG,QAAM,EAACM,UAAU,CAACC,IAAI;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BhB,OAAA;UAAAY,QAAA,GAAG,iBAAe,EAACM,UAAU,CAACE,YAAY;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/ChB,OAAA;UAAAY,QAAA,GAAG,aAAW,EAACM,UAAU,CAACG,aAAa;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5ChB,OAAA;UAAAY,QAAA,GAAG,UAAQ,EAACM,UAAU,CAACI,MAAM;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJ7BE,UAAU,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKlB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACd,EAAA,CA3CID,iBAA2B;AAAAuB,EAAA,GAA3BvB,iBAA2B;AA6CjC,eAAeA,iBAAiB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}