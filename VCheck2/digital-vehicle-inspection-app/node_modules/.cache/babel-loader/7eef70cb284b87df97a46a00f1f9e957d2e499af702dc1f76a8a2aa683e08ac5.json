{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Semicolon\\\\Desktop\\\\VCheck2\\\\digital-vehicle-inspection-app\\\\src\\\\components\\\\Inspector\\\\ScanPlate.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ScanPlate.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScanPlate = () => {\n  _s();\n  const [plateNumber, setPlateNumber] = useState('');\n  const [verificationResult, setVerificationResult] = useState(null);\n  const [scanMethod, setScanMethod] = useState('manual');\n  const [cameraActive, setCameraActive] = useState(false);\n  const [isValidPlate, setIsValidPlate] = useState(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Enhanced plate validation\n  const PLATE_REGEX = /^[A-Z]{1,3}[ -]?\\d{1,4}[A-Z]?$/i;\n  const validatePlateNumber = plate => {\n    if (!plate) return false;\n    const cleanPlate = plate.replace(/[ -]/g, '');\n    const patternValid = PLATE_REGEX.test(plate);\n    const hasLetters = /[A-Z]/i.test(cleanPlate);\n    const hasNumbers = /\\d/.test(cleanPlate);\n    const minLength = cleanPlate.length >= 4;\n    return patternValid && hasLetters && hasNumbers && minLength;\n  };\n\n  // Clean up camera\n  useEffect(() => {\n    return () => {\n      var _videoRef$current;\n      if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n        const stream = videoRef.current.srcObject;\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Camera initialization\n  useEffect(() => {\n    if (scanMethod === 'camera' && cameraActive) {\n      const startCamera = async () => {\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            video: {\n              facingMode: 'environment'\n            }\n          });\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        } catch (err) {\n          console.error('Camera error:', err);\n          setVerificationResult('Camera access denied. Using manual entry.');\n          setScanMethod('manual');\n          setCameraActive(false);\n        }\n      };\n      startCamera();\n    }\n  }, [scanMethod, cameraActive]);\n  const captureImage = () => {\n    if (videoRef.current && canvasRef.current) {\n      const context = canvasRef.current.getContext('2d');\n      if (context) {\n        canvasRef.current.width = videoRef.current.videoWidth;\n        canvasRef.current.height = videoRef.current.videoHeight;\n        context.drawImage(videoRef.current, 0, 0);\n\n        // Convert canvas to image URL\n        const imageUrl = canvasRef.current.toDataURL('image/jpeg');\n        setCapturedImage(imageUrl);\n\n        // Simulate plate recognition from image\n        simulatePlateRecognition();\n      }\n    }\n  };\n  const simulatePlateRecognition = () => {\n    // More realistic test plates with probabilities\n    const testPlates = [{\n      plate: \"ABC123\",\n      valid: true,\n      probability: 0.7\n    }, {\n      plate: \"AB 123\",\n      valid: true,\n      probability: 0.6\n    }, {\n      plate: \"X-1234\",\n      valid: true,\n      probability: 0.5\n    }, {\n      plate: \"XYZ1A\",\n      valid: true,\n      probability: 0.4\n    }, {\n      plate: \"INVALID\",\n      valid: false,\n      probability: 0.3\n    }, {\n      plate: \"123456\",\n      valid: false,\n      probability: 0.2\n    }, {\n      plate: \"ABCDEF\",\n      valid: false,\n      probability: 0.1\n    }];\n\n    // Weighted random selection\n    const totalWeight = testPlates.reduce((sum, plate) => sum + plate.probability, 0);\n    let random = Math.random() * totalWeight;\n    let selectedPlate = testPlates[0];\n    for (const plate of testPlates) {\n      if (random < plate.probability) {\n        selectedPlate = plate;\n        break;\n      }\n      random -= plate.probability;\n    }\n    setPlateNumber(selectedPlate.plate);\n    setIsValidPlate(selectedPlate.valid);\n    setVerificationResult(selectedPlate.valid ? null : \"Invalid plate format detected\");\n  };\n  const handleManualInput = e => {\n    const value = e.target.value.toUpperCase();\n    setPlateNumber(value);\n    setVerificationResult(null);\n    setIsValidPlate(validatePlateNumber(value));\n  };\n  const handleScan = () => {\n    if (!plateNumber.trim()) {\n      setVerificationResult('Please enter a plate number');\n      setIsValidPlate(false);\n      return;\n    }\n    const isValid = validatePlateNumber(plateNumber);\n    setIsValidPlate(isValid);\n    if (!isValid) {\n      setVerificationResult('Invalid plate number format');\n      return;\n    }\n\n    // Simulate API verification\n    setTimeout(() => {\n      setVerificationResult(`Vehicle ${plateNumber} verified successfully`);\n      // In real app: send to backend, add to history, etc.\n    }, 1000);\n  };\n  const toggleCamera = () => {\n    setCameraActive(!cameraActive);\n    if (!cameraActive) {\n      setPlateNumber('');\n      setCapturedImage(null);\n      setIsValidPlate(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scan-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vehicle Plate Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-method-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `method-btn ${scanMethod === 'camera' ? 'active' : ''}`,\n        onClick: () => setScanMethod('camera'),\n        children: \"Camera Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `method-btn ${scanMethod === 'manual' ? 'active' : ''}`,\n        onClick: () => setScanMethod('manual'),\n        children: \"Manual Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), scanMethod === 'camera' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `camera-feed ${cameraActive ? 'active' : 'inactive'}`,\n        children: cameraActive ? capturedImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: capturedImage,\n          alt: \"Captured plate\",\n          className: \"captured-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          className: \"video-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Camera is off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-controls\",\n        children: [cameraActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: !capturedImage ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"capture-btn\",\n            onClick: captureImage,\n            children: \"Capture Plate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"capture-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"retry-btn\",\n              onClick: () => setCapturedImage(null),\n              children: \"Retry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"verify-btn\",\n              onClick: handleScan,\n              disabled: !plateNumber || isValidPlate === false,\n              children: \"Verify Plate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 37\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `camera-toggle ${cameraActive ? 'active' : ''}`,\n          onClick: toggleCamera,\n          children: cameraActive ? 'Stop Camera' : 'Start Camera'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this), plateNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detection-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Detected Plate: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: plateNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `validation ${isValidPlate ? 'valid' : 'invalid'}`,\n          children: isValidPlate ? 'Valid format' : 'Invalid format'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manual-entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: plateNumber,\n        onChange: handleManualInput,\n        placeholder: \"e.g. ABC123 or AB 1234\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), plateNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `validation ${isValidPlate ? 'valid' : 'invalid'}`,\n        children: isValidPlate ? 'Valid format' : 'Invalid format'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this), verificationResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result ${verificationResult.includes('Invalid') ? 'error' : 'success'}`,\n      children: verificationResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n_s(ScanPlate, \"Z0V7JUqb8ui+S41yG7aWOuGxqsg=\");\n_c = ScanPlate;\nexport default ScanPlate;\nvar _c;\n$RefreshReg$(_c, \"ScanPlate\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ScanPlate","_s","plateNumber","setPlateNumber","verificationResult","setVerificationResult","scanMethod","setScanMethod","cameraActive","setCameraActive","isValidPlate","setIsValidPlate","capturedImage","setCapturedImage","videoRef","canvasRef","PLATE_REGEX","validatePlateNumber","plate","cleanPlate","replace","patternValid","test","hasLetters","hasNumbers","minLength","length","_videoRef$current","current","srcObject","stream","getTracks","forEach","track","stop","startCamera","navigator","mediaDevices","getUserMedia","video","facingMode","err","console","error","captureImage","context","getContext","width","videoWidth","height","videoHeight","drawImage","imageUrl","toDataURL","simulatePlateRecognition","testPlates","valid","probability","totalWeight","reduce","sum","random","Math","selectedPlate","handleManualInput","e","value","target","toUpperCase","handleScan","trim","isValid","setTimeout","toggleCamera","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","ref","autoPlay","playsInline","muted","disabled","type","onChange","placeholder","autoFocus","includes","style","display","_c","$RefreshReg$"],"sources":["C:/Users/Semicolon/Desktop/VCheck2/digital-vehicle-inspection-app/src/components/Inspector/ScanPlate.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './ScanPlate.css';\n\nconst ScanPlate: React.FC = () => {\n    const [plateNumber, setPlateNumber] = useState('');\n    const [verificationResult, setVerificationResult] = useState<string | null>(null);\n    const [scanMethod, setScanMethod] = useState<'camera' | 'manual'>('manual');\n    const [cameraActive, setCameraActive] = useState(false);\n    const [isValidPlate, setIsValidPlate] = useState<boolean | null>(null);\n    const [capturedImage, setCapturedImage] = useState<string | null>(null);\n    const videoRef = useRef<HTMLVideoElement>(null);\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    // Enhanced plate validation\n    const PLATE_REGEX = /^[A-Z]{1,3}[ -]?\\d{1,4}[A-Z]?$/i;\n\n    const validatePlateNumber = (plate: string): boolean => {\n        if (!plate) return false;\n        \n        const cleanPlate = plate.replace(/[ -]/g, '');\n        const patternValid = PLATE_REGEX.test(plate);\n        const hasLetters = /[A-Z]/i.test(cleanPlate);\n        const hasNumbers = /\\d/.test(cleanPlate);\n        const minLength = cleanPlate.length >= 4;\n        \n        return patternValid && hasLetters && hasNumbers && minLength;\n    };\n\n    // Clean up camera\n    useEffect(() => {\n        return () => {\n            if (videoRef.current?.srcObject) {\n                const stream = videoRef.current.srcObject as MediaStream;\n                stream.getTracks().forEach(track => track.stop());\n            }\n        };\n    }, []);\n\n    // Camera initialization\n    useEffect(() => {\n        if (scanMethod === 'camera' && cameraActive) {\n            const startCamera = async () => {\n                try {\n                    const stream = await navigator.mediaDevices.getUserMedia({ \n                        video: { facingMode: 'environment' } \n                    });\n                    if (videoRef.current) {\n                        videoRef.current.srcObject = stream;\n                    }\n                } catch (err) {\n                    console.error('Camera error:', err);\n                    setVerificationResult('Camera access denied. Using manual entry.');\n                    setScanMethod('manual');\n                    setCameraActive(false);\n                }\n            };\n            startCamera();\n        }\n    }, [scanMethod, cameraActive]);\n\n    const captureImage = () => {\n        if (videoRef.current && canvasRef.current) {\n            const context = canvasRef.current.getContext('2d');\n            if (context) {\n                canvasRef.current.width = videoRef.current.videoWidth;\n                canvasRef.current.height = videoRef.current.videoHeight;\n                context.drawImage(videoRef.current, 0, 0);\n                \n                // Convert canvas to image URL\n                const imageUrl = canvasRef.current.toDataURL('image/jpeg');\n                setCapturedImage(imageUrl);\n                \n                // Simulate plate recognition from image\n                simulatePlateRecognition();\n            }\n        }\n    };\n\n    const simulatePlateRecognition = () => {\n        // More realistic test plates with probabilities\n        const testPlates = [\n            { plate: \"ABC123\", valid: true, probability: 0.7 },\n            { plate: \"AB 123\", valid: true, probability: 0.6 },\n            { plate: \"X-1234\", valid: true, probability: 0.5 },\n            { plate: \"XYZ1A\", valid: true, probability: 0.4 },\n            { plate: \"INVALID\", valid: false, probability: 0.3 },\n            { plate: \"123456\", valid: false, probability: 0.2 },\n            { plate: \"ABCDEF\", valid: false, probability: 0.1 }\n        ];\n        \n        // Weighted random selection\n        const totalWeight = testPlates.reduce((sum, plate) => sum + plate.probability, 0);\n        let random = Math.random() * totalWeight;\n        let selectedPlate = testPlates[0];\n        \n        for (const plate of testPlates) {\n            if (random < plate.probability) {\n                selectedPlate = plate;\n                break;\n            }\n            random -= plate.probability;\n        }\n        \n        setPlateNumber(selectedPlate.plate);\n        setIsValidPlate(selectedPlate.valid);\n        setVerificationResult(selectedPlate.valid ? null : \"Invalid plate format detected\");\n    };\n\n    const handleManualInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value.toUpperCase();\n        setPlateNumber(value);\n        setVerificationResult(null);\n        setIsValidPlate(validatePlateNumber(value));\n    };\n\n    const handleScan = () => {\n        if (!plateNumber.trim()) {\n            setVerificationResult('Please enter a plate number');\n            setIsValidPlate(false);\n            return;\n        }\n\n        const isValid = validatePlateNumber(plateNumber);\n        setIsValidPlate(isValid);\n\n        if (!isValid) {\n            setVerificationResult('Invalid plate number format');\n            return;\n        }\n\n        // Simulate API verification\n        setTimeout(() => {\n            setVerificationResult(`Vehicle ${plateNumber} verified successfully`);\n            // In real app: send to backend, add to history, etc.\n        }, 1000);\n    };\n\n    const toggleCamera = () => {\n        setCameraActive(!cameraActive);\n        if (!cameraActive) {\n            setPlateNumber('');\n            setCapturedImage(null);\n            setIsValidPlate(null);\n        }\n    };\n\n    return (\n        <div className=\"scan-container\">\n            <h2>Vehicle Plate Scanner</h2>\n            \n            <div className=\"scan-method-toggle\">\n                <button\n                    className={`method-btn ${scanMethod === 'camera' ? 'active' : ''}`}\n                    onClick={() => setScanMethod('camera')}\n                >\n                    Camera Scan\n                </button>\n                <button\n                    className={`method-btn ${scanMethod === 'manual' ? 'active' : ''}`}\n                    onClick={() => setScanMethod('manual')}\n                >\n                    Manual Entry\n                </button>\n            </div>\n\n            {scanMethod === 'camera' ? (\n                <div className=\"camera-section\">\n                    <div className={`camera-feed ${cameraActive ? 'active' : 'inactive'}`}>\n                        {cameraActive ? (\n                            capturedImage ? (\n                                <img src={capturedImage} alt=\"Captured plate\" className=\"captured-image\" />\n                            ) : (\n                                <video ref={videoRef} autoPlay playsInline muted className=\"video-preview\" />\n                            )\n                        ) : (\n                            <div className=\"camera-placeholder\">\n                                <p>Camera is off</p>\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"camera-controls\">\n                        {cameraActive && (\n                            <>\n                                {!capturedImage ? (\n                                    <button \n                                        className=\"capture-btn\"\n                                        onClick={captureImage}\n                                    >\n                                        Capture Plate\n                                    </button>\n                                ) : (\n                                    <div className=\"capture-actions\">\n                                        <button \n                                            className=\"retry-btn\"\n                                            onClick={() => setCapturedImage(null)}\n                                        >\n                                            Retry\n                                        </button>\n                                        <button \n                                            className=\"verify-btn\"\n                                            onClick={handleScan}\n                                            disabled={!plateNumber || isValidPlate === false}\n                                        >\n                                            Verify Plate\n                                        </button>\n                                    </div>\n                                )}\n                            </>\n                        )}\n                        <button \n                            className={`camera-toggle ${cameraActive ? 'active' : ''}`}\n                            onClick={toggleCamera}\n                        >\n                            {cameraActive ? 'Stop Camera' : 'Start Camera'}\n                        </button>\n                    </div>\n\n                    {plateNumber && (\n                        <div className=\"detection-result\">\n                            <p>Detected Plate: <strong>{plateNumber}</strong></p>\n                            <div className={`validation ${isValidPlate ? 'valid' : 'invalid'}`}>\n                                {isValidPlate ? 'Valid format' : 'Invalid format'}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            ) : (\n                <div className=\"manual-entry\">\n                    <input\n                        type=\"text\"\n                        value={plateNumber}\n                        onChange={handleManualInput}\n                        placeholder=\"e.g. ABC123 or AB 1234\"\n                        autoFocus\n                    />\n                    {plateNumber && (\n                        <div className={`validation ${isValidPlate ? 'valid' : 'invalid'}`}>\n                            {isValidPlate ? 'Valid format' : 'Invalid format'}\n                        </div>\n                    )}\n                </div>\n            )}\n\n            {verificationResult && (\n                <div className={`result ${verificationResult.includes('Invalid') ? 'error' : 'success'}`}>\n                    {verificationResult}\n                </div>\n            )}\n\n            <canvas ref={canvasRef} style={{ display: 'none' }} />\n        </div>\n    );\n};\n\nexport default ScanPlate;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EACjF,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAsB,QAAQ,CAAC;EAC3E,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAiB,IAAI,CAAC;EACtE,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAgB,IAAI,CAAC;EACvE,MAAMqB,QAAQ,GAAGpB,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAMqB,SAAS,GAAGrB,MAAM,CAAoB,IAAI,CAAC;;EAEjD;EACA,MAAMsB,WAAW,GAAG,iCAAiC;EAErD,MAAMC,mBAAmB,GAAIC,KAAa,IAAc;IACpD,IAAI,CAACA,KAAK,EAAE,OAAO,KAAK;IAExB,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;IAC7C,MAAMC,YAAY,GAAGL,WAAW,CAACM,IAAI,CAACJ,KAAK,CAAC;IAC5C,MAAMK,UAAU,GAAG,QAAQ,CAACD,IAAI,CAACH,UAAU,CAAC;IAC5C,MAAMK,UAAU,GAAG,IAAI,CAACF,IAAI,CAACH,UAAU,CAAC;IACxC,MAAMM,SAAS,GAAGN,UAAU,CAACO,MAAM,IAAI,CAAC;IAExC,OAAOL,YAAY,IAAIE,UAAU,IAAIC,UAAU,IAAIC,SAAS;EAChE,CAAC;;EAED;EACA9B,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MAAA,IAAAgC,iBAAA;MACT,KAAAA,iBAAA,GAAIb,QAAQ,CAACc,OAAO,cAAAD,iBAAA,eAAhBA,iBAAA,CAAkBE,SAAS,EAAE;QAC7B,MAAMC,MAAM,GAAGhB,QAAQ,CAACc,OAAO,CAACC,SAAwB;QACxDC,MAAM,CAACC,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACrD;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAvC,SAAS,CAAC,MAAM;IACZ,IAAIW,UAAU,KAAK,QAAQ,IAAIE,YAAY,EAAE;MACzC,MAAM2B,WAAW,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACA,MAAML,MAAM,GAAG,MAAMM,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;YACrDC,KAAK,EAAE;cAAEC,UAAU,EAAE;YAAc;UACvC,CAAC,CAAC;UACF,IAAI1B,QAAQ,CAACc,OAAO,EAAE;YAClBd,QAAQ,CAACc,OAAO,CAACC,SAAS,GAAGC,MAAM;UACvC;QACJ,CAAC,CAAC,OAAOW,GAAG,EAAE;UACVC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;UACnCpC,qBAAqB,CAAC,2CAA2C,CAAC;UAClEE,aAAa,CAAC,QAAQ,CAAC;UACvBE,eAAe,CAAC,KAAK,CAAC;QAC1B;MACJ,CAAC;MACD0B,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC,EAAE,CAAC7B,UAAU,EAAEE,YAAY,CAAC,CAAC;EAE9B,MAAMoC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAI9B,QAAQ,CAACc,OAAO,IAAIb,SAAS,CAACa,OAAO,EAAE;MACvC,MAAMiB,OAAO,GAAG9B,SAAS,CAACa,OAAO,CAACkB,UAAU,CAAC,IAAI,CAAC;MAClD,IAAID,OAAO,EAAE;QACT9B,SAAS,CAACa,OAAO,CAACmB,KAAK,GAAGjC,QAAQ,CAACc,OAAO,CAACoB,UAAU;QACrDjC,SAAS,CAACa,OAAO,CAACqB,MAAM,GAAGnC,QAAQ,CAACc,OAAO,CAACsB,WAAW;QACvDL,OAAO,CAACM,SAAS,CAACrC,QAAQ,CAACc,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;;QAEzC;QACA,MAAMwB,QAAQ,GAAGrC,SAAS,CAACa,OAAO,CAACyB,SAAS,CAAC,YAAY,CAAC;QAC1DxC,gBAAgB,CAACuC,QAAQ,CAAC;;QAE1B;QACAE,wBAAwB,CAAC,CAAC;MAC9B;IACJ;EACJ,CAAC;EAED,MAAMA,wBAAwB,GAAGA,CAAA,KAAM;IACnC;IACA,MAAMC,UAAU,GAAG,CACf;MAAErC,KAAK,EAAE,QAAQ;MAAEsC,KAAK,EAAE,IAAI;MAAEC,WAAW,EAAE;IAAI,CAAC,EAClD;MAAEvC,KAAK,EAAE,QAAQ;MAAEsC,KAAK,EAAE,IAAI;MAAEC,WAAW,EAAE;IAAI,CAAC,EAClD;MAAEvC,KAAK,EAAE,QAAQ;MAAEsC,KAAK,EAAE,IAAI;MAAEC,WAAW,EAAE;IAAI,CAAC,EAClD;MAAEvC,KAAK,EAAE,OAAO;MAAEsC,KAAK,EAAE,IAAI;MAAEC,WAAW,EAAE;IAAI,CAAC,EACjD;MAAEvC,KAAK,EAAE,SAAS;MAAEsC,KAAK,EAAE,KAAK;MAAEC,WAAW,EAAE;IAAI,CAAC,EACpD;MAAEvC,KAAK,EAAE,QAAQ;MAAEsC,KAAK,EAAE,KAAK;MAAEC,WAAW,EAAE;IAAI,CAAC,EACnD;MAAEvC,KAAK,EAAE,QAAQ;MAAEsC,KAAK,EAAE,KAAK;MAAEC,WAAW,EAAE;IAAI,CAAC,CACtD;;IAED;IACA,MAAMC,WAAW,GAAGH,UAAU,CAACI,MAAM,CAAC,CAACC,GAAG,EAAE1C,KAAK,KAAK0C,GAAG,GAAG1C,KAAK,CAACuC,WAAW,EAAE,CAAC,CAAC;IACjF,IAAII,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,CAAC,GAAGH,WAAW;IACxC,IAAIK,aAAa,GAAGR,UAAU,CAAC,CAAC,CAAC;IAEjC,KAAK,MAAMrC,KAAK,IAAIqC,UAAU,EAAE;MAC5B,IAAIM,MAAM,GAAG3C,KAAK,CAACuC,WAAW,EAAE;QAC5BM,aAAa,GAAG7C,KAAK;QACrB;MACJ;MACA2C,MAAM,IAAI3C,KAAK,CAACuC,WAAW;IAC/B;IAEAtD,cAAc,CAAC4D,aAAa,CAAC7C,KAAK,CAAC;IACnCP,eAAe,CAACoD,aAAa,CAACP,KAAK,CAAC;IACpCnD,qBAAqB,CAAC0D,aAAa,CAACP,KAAK,GAAG,IAAI,GAAG,+BAA+B,CAAC;EACvF,CAAC;EAED,MAAMQ,iBAAiB,GAAIC,CAAsC,IAAK;IAClE,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK,CAACE,WAAW,CAAC,CAAC;IAC1CjE,cAAc,CAAC+D,KAAK,CAAC;IACrB7D,qBAAqB,CAAC,IAAI,CAAC;IAC3BM,eAAe,CAACM,mBAAmB,CAACiD,KAAK,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAI,CAACnE,WAAW,CAACoE,IAAI,CAAC,CAAC,EAAE;MACrBjE,qBAAqB,CAAC,6BAA6B,CAAC;MACpDM,eAAe,CAAC,KAAK,CAAC;MACtB;IACJ;IAEA,MAAM4D,OAAO,GAAGtD,mBAAmB,CAACf,WAAW,CAAC;IAChDS,eAAe,CAAC4D,OAAO,CAAC;IAExB,IAAI,CAACA,OAAO,EAAE;MACVlE,qBAAqB,CAAC,6BAA6B,CAAC;MACpD;IACJ;;IAEA;IACAmE,UAAU,CAAC,MAAM;MACbnE,qBAAqB,CAAC,WAAWH,WAAW,wBAAwB,CAAC;MACrE;IACJ,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,MAAMuE,YAAY,GAAGA,CAAA,KAAM;IACvBhE,eAAe,CAAC,CAACD,YAAY,CAAC;IAC9B,IAAI,CAACA,YAAY,EAAE;MACfL,cAAc,CAAC,EAAE,CAAC;MAClBU,gBAAgB,CAAC,IAAI,CAAC;MACtBF,eAAe,CAAC,IAAI,CAAC;IACzB;EACJ,CAAC;EAED,oBACId,OAAA;IAAK6E,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B9E,OAAA;MAAA8E,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9BlF,OAAA;MAAK6E,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/B9E,OAAA;QACI6E,SAAS,EAAE,cAAcpE,UAAU,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;QACnE0E,OAAO,EAAEA,CAAA,KAAMzE,aAAa,CAAC,QAAQ,CAAE;QAAAoE,QAAA,EAC1C;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTlF,OAAA;QACI6E,SAAS,EAAE,cAAcpE,UAAU,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;QACnE0E,OAAO,EAAEA,CAAA,KAAMzE,aAAa,CAAC,QAAQ,CAAE;QAAAoE,QAAA,EAC1C;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAELzE,UAAU,KAAK,QAAQ,gBACpBT,OAAA;MAAK6E,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3B9E,OAAA;QAAK6E,SAAS,EAAE,eAAelE,YAAY,GAAG,QAAQ,GAAG,UAAU,EAAG;QAAAmE,QAAA,EACjEnE,YAAY,GACTI,aAAa,gBACTf,OAAA;UAAKoF,GAAG,EAAErE,aAAc;UAACsE,GAAG,EAAC,gBAAgB;UAACR,SAAS,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE3ElF,OAAA;UAAOsF,GAAG,EAAErE,QAAS;UAACsE,QAAQ;UAACC,WAAW;UAACC,KAAK;UAACZ,SAAS,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC/E,gBAEDlF,OAAA;UAAK6E,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eAC/B9E,OAAA;YAAA8E,QAAA,EAAG;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MACR;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAENlF,OAAA;QAAK6E,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAC3BnE,YAAY,iBACTX,OAAA,CAAAE,SAAA;UAAA4E,QAAA,EACK,CAAC/D,aAAa,gBACXf,OAAA;YACI6E,SAAS,EAAC,aAAa;YACvBM,OAAO,EAAEpC,YAAa;YAAA+B,QAAA,EACzB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAETlF,OAAA;YAAK6E,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC5B9E,OAAA;cACI6E,SAAS,EAAC,WAAW;cACrBM,OAAO,EAAEA,CAAA,KAAMnE,gBAAgB,CAAC,IAAI,CAAE;cAAA8D,QAAA,EACzC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTlF,OAAA;cACI6E,SAAS,EAAC,YAAY;cACtBM,OAAO,EAAEX,UAAW;cACpBkB,QAAQ,EAAE,CAACrF,WAAW,IAAIQ,YAAY,KAAK,KAAM;cAAAiE,QAAA,EACpD;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QACR,gBACH,CACL,eACDlF,OAAA;UACI6E,SAAS,EAAE,iBAAiBlE,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC3DwE,OAAO,EAAEP,YAAa;UAAAE,QAAA,EAErBnE,YAAY,GAAG,aAAa,GAAG;QAAc;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EAEL7E,WAAW,iBACRL,OAAA;QAAK6E,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7B9E,OAAA;UAAA8E,QAAA,GAAG,kBAAgB,eAAA9E,OAAA;YAAA8E,QAAA,EAASzE;UAAW;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACrDlF,OAAA;UAAK6E,SAAS,EAAE,cAAchE,YAAY,GAAG,OAAO,GAAG,SAAS,EAAG;UAAAiE,QAAA,EAC9DjE,YAAY,GAAG,cAAc,GAAG;QAAgB;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAENlF,OAAA;MAAK6E,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzB9E,OAAA;QACI2F,IAAI,EAAC,MAAM;QACXtB,KAAK,EAAEhE,WAAY;QACnBuF,QAAQ,EAAEzB,iBAAkB;QAC5B0B,WAAW,EAAC,wBAAwB;QACpCC,SAAS;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,EACD7E,WAAW,iBACRL,OAAA;QAAK6E,SAAS,EAAE,cAAchE,YAAY,GAAG,OAAO,GAAG,SAAS,EAAG;QAAAiE,QAAA,EAC9DjE,YAAY,GAAG,cAAc,GAAG;MAAgB;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR,EAEA3E,kBAAkB,iBACfP,OAAA;MAAK6E,SAAS,EAAE,UAAUtE,kBAAkB,CAACwF,QAAQ,CAAC,SAAS,CAAC,GAAG,OAAO,GAAG,SAAS,EAAG;MAAAjB,QAAA,EACpFvE;IAAkB;MAAAwE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CACR,eAEDlF,OAAA;MAAQsF,GAAG,EAAEpE,SAAU;MAAC8E,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEd,CAAC;AAAC9E,EAAA,CA1PID,SAAmB;AAAA+F,EAAA,GAAnB/F,SAAmB;AA4PzB,eAAeA,SAAS;AAAC,IAAA+F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}