{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Semicolon\\\\Desktop\\\\VCheck2\\\\digital-vehicle-inspection-app\\\\src\\\\components\\\\Auth\\\\Register.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [role, setRole] = useState('owner');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [vehicleDetails, setVehicleDetails] = useState({\n    make: '',\n    model: '',\n    year: '',\n    plateNumber: '',\n    color: '',\n    vin: ''\n  });\n  const navigate = useNavigate();\n\n  // Clear vehicle details when switching to inspector role\n  useEffect(() => {\n    if (role === 'inspector') {\n      setVehicleDetails({\n        make: '',\n        model: '',\n        year: '',\n        plateNumber: '',\n        color: '',\n        vin: ''\n      });\n    }\n  }, [role]);\n  const handleVehicleDetailChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setVehicleDetails(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    setError('');\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      const userData = {\n        username,\n        email,\n        role,\n        ...(role === 'owner' && {\n          vehicleDetails\n        })\n      };\n      localStorage.setItem('user', JSON.stringify(userData));\n      navigate(role === 'inspector' ? '/inspector-dashboard' : '/owner-dashboard');\n    } catch (err) {\n      setError('Registration failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"H/nkZXw782NueiIrFstbrlqpsXc=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Register","_s","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","role","setRole","isLoading","setIsLoading","error","setError","vehicleDetails","setVehicleDetails","make","model","year","plateNumber","color","vin","navigate","handleVehicleDetailChange","e","name","value","target","prev","handleRegister","preventDefault","Promise","resolve","setTimeout","userData","localStorage","setItem","JSON","stringify","err","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Semicolon/Desktop/VCheck2/digital-vehicle-inspection-app/src/components/Auth/Register.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Register.css';\n\ninterface VehicleDetails {\n    make: string;\n    model: string;\n    year: string;\n    plateNumber: string;\n    color: string;\n    vin: string;\n}\n\nconst Register: React.FC = () => {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [role, setRole] = useState<'inspector' | 'owner'>('owner');\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [vehicleDetails, setVehicleDetails] = useState<VehicleDetails>({\n        make: '',\n        model: '',\n        year: '',\n        plateNumber: '',\n        color: '',\n        vin: ''\n    });\n    const navigate = useNavigate();\n\n    // Clear vehicle details when switching to inspector role\n    useEffect(() => {\n        if (role === 'inspector') {\n            setVehicleDetails({\n                make: '',\n                model: '',\n                year: '',\n                plateNumber: '',\n                color: '',\n                vin: ''\n            });\n        }\n    }, [role]);\n\n    const handleVehicleDetailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setVehicleDetails(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n\n    const handleRegister = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setError('');\n        \n        if (password !== confirmPassword) {\n            setError('Passwords do not match');\n            return;\n        }\n\n        setIsLoading(true);\n        \n        try {\n            // Simulate API call\n            await new Promise(resolve => setTimeout(resolve, 1500));\n            \n            const userData = {\n                username,\n                email,\n                role,\n                ...(role === 'owner' && { vehicleDetails })\n            };\n\n            localStorage.setItem('user', JSON.stringify(userData));\n            \n            navigate(role === 'inspector' ? '/inspector-dashboard' : '/owner-dashboard');\n        } catch (err) {\n            setError('Registration failed. Please try again.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"register-container\">\n            {/* ... rest of your JSX remains exactly the same ... */}\n        </div>\n    );\n};\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}