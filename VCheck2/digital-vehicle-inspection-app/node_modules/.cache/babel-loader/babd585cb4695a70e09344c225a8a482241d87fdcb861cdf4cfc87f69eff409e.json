{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      // DEMO LOGIC - Replace with real authentication\n      const isInspector = email.includes('inspector@'); // Simple check for demo\n\n      if (isInspector) {\n        navigate('/inspector/dashboard'); // Redirect to inspector dashboard\n      } else {\n        navigate('/owner/dashboard'); // Redirect to owner dashboard\n      }\n    } catch (err) {\n      setError('Login failed. Please check your credentials.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n};\n_s(Login, \"ujrlkl/E0aUOvILAlibsOQmX/rs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","Login","_s","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","navigate","handleLogin","e","preventDefault","Promise","resolve","setTimeout","isInspector","includes","err","_c","$RefreshReg$"],"sources":["C:/Users/Semicolon/Desktop/VCheck2/digital-vehicle-inspection-app/src/components/Auth/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\nconst Login: React.FC = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleLogin = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setError('');\n        setIsLoading(true);\n        \n        try {\n            // Simulate API call\n            await new Promise(resolve => setTimeout(resolve, 1500));\n            \n            // DEMO LOGIC - Replace with real authentication\n            const isInspector = email.includes('inspector@'); // Simple check for demo\n            \n            if (isInspector) {\n                navigate('/inspector/dashboard'); // Redirect to inspector dashboard\n            } else {\n                navigate('/owner/dashboard'); // Redirect to owner dashboard\n            }\n            \n        } catch (err) {\n            setError('Login failed. Please check your credentials.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n  \n};\n\nexport default Login;"],"mappings":";AAAA,SAAgBA,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AAEpB,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,WAAW,GAAG,MAAOC,CAAkB,IAAK;IAC9CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,QAAQ,CAAC,EAAE,CAAC;IACZE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACA;MACA,MAAM,IAAIK,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;MAEvD;MACA,MAAME,WAAW,GAAGf,KAAK,CAACgB,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;;MAElD,IAAID,WAAW,EAAE;QACbP,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;MACtC,CAAC,MAAM;QACHA,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC;MAClC;IAEJ,CAAC,CAAC,OAAOS,GAAG,EAAE;MACVZ,QAAQ,CAAC,8CAA8C,CAAC;IAC5D,CAAC,SAAS;MACNE,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;AAGL,CAAC;AAACR,EAAA,CAjCID,KAAe;EAAA,QAKAD,WAAW;AAAA;AAAAqB,EAAA,GAL1BpB,KAAe;AAmCrB,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}