{"ast":null,"code":"const handleLogin = async e => {\n  e.preventDefault();\n  setError('');\n  setIsLoading(true);\n  try {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1500));\n\n    // Store authentication data\n    localStorage.setItem('isAuthenticated', 'true');\n    localStorage.setItem('userRole', role);\n\n    // Redirect to correct dashboard (match your route paths)\n    navigate(`/${role}/dashboard`, {\n      replace: true\n    });\n  } catch (err) {\n    setError('Login failed. Please check your credentials.');\n  } finally {\n    setIsLoading(false);\n  }\n};","map":{"version":3,"names":["handleLogin","e","preventDefault","setError","setIsLoading","Promise","resolve","setTimeout","localStorage","setItem","role","navigate","replace","err"],"sources":["C:/Users/Semicolon/Desktop/VCheck2/digital-vehicle-inspection-app/src/components/Auth/Login.tsx"],"sourcesContent":["const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    \n    try {\n        // Simulate API call\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        \n        // Store authentication data\n        localStorage.setItem('isAuthenticated', 'true');\n        localStorage.setItem('userRole', role);\n        \n        // Redirect to correct dashboard (match your route paths)\n        navigate(`/${role}/dashboard`, { replace: true });\n        \n    } catch (err) {\n        setError('Login failed. Please check your credentials.');\n    } finally {\n        setIsLoading(false);\n    }\n};"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAOC,CAAkB,IAAK;EAC9CA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,QAAQ,CAAC,EAAE,CAAC;EACZC,YAAY,CAAC,IAAI,CAAC;EAElB,IAAI;IACA;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;IAEvD;IACAE,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;IAC/CD,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAAC;;IAEtC;IACAC,QAAQ,CAAC,IAAID,IAAI,YAAY,EAAE;MAAEE,OAAO,EAAE;IAAK,CAAC,CAAC;EAErD,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVV,QAAQ,CAAC,8CAA8C,CAAC;EAC5D,CAAC,SAAS;IACNC,YAAY,CAAC,KAAK,CAAC;EACvB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}